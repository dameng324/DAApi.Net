//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (https://www.swig.org).
// Version 4.3.0
//
// Do not make changes to this file unless you know what you are doing - modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace DAApi.Net {

public class CFutureApi : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal CFutureApi(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(CFutureApi obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  internal static global::System.Runtime.InteropServices.HandleRef swigRelease(CFutureApi obj) {
    if (obj != null) {
      if (!obj.swigCMemOwn)
        throw new global::System.ApplicationException("Cannot release ownership as memory is not owned");
      global::System.Runtime.InteropServices.HandleRef ptr = obj.swigCPtr;
      obj.swigCMemOwn = false;
      obj.Dispose();
      return ptr;
    } else {
      return new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
    }
  }

  ~CFutureApi() {
    Dispose(false);
  }

  public void Dispose() {
    Dispose(true);
    global::System.GC.SuppressFinalize(this);
  }

  protected virtual void Dispose(bool disposing) {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          DaApiWrapperPINVOKE.delete_CFutureApi(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
    }
  }

  public static string GetVersion() {
    string ret = DaApiWrapperPINVOKE.CFutureApi_GetVersion();
    return ret;
  }

  public static CFutureApi CreateFutureApi(bool bRecordLog, string lpszLogFileName, string lpszLogFileDir) {
    global::System.IntPtr cPtr = DaApiWrapperPINVOKE.CFutureApi_CreateFutureApi__SWIG_0(bRecordLog, lpszLogFileName, lpszLogFileDir);
    CFutureApi ret = (cPtr == global::System.IntPtr.Zero) ? null : new CFutureApi(cPtr, false);
    return ret;
  }

  public static CFutureApi CreateFutureApi(bool bRecordLog, string lpszLogFileName) {
    global::System.IntPtr cPtr = DaApiWrapperPINVOKE.CFutureApi_CreateFutureApi__SWIG_1(bRecordLog, lpszLogFileName);
    CFutureApi ret = (cPtr == global::System.IntPtr.Zero) ? null : new CFutureApi(cPtr, false);
    return ret;
  }

  public static CFutureApi CreateFutureApi(bool bRecordLog) {
    global::System.IntPtr cPtr = DaApiWrapperPINVOKE.CFutureApi_CreateFutureApi__SWIG_2(bRecordLog);
    CFutureApi ret = (cPtr == global::System.IntPtr.Zero) ? null : new CFutureApi(cPtr, false);
    return ret;
  }

  public virtual bool Init() {
    bool ret = DaApiWrapperPINVOKE.CFutureApi_Init(swigCPtr);
    return ret;
  }

  public virtual void Release() {
    DaApiWrapperPINVOKE.CFutureApi_Release(swigCPtr);
  }

  public virtual void SetHeartBeatTimeout(int iTimeout) {
    DaApiWrapperPINVOKE.CFutureApi_SetHeartBeatTimeout(swigCPtr, iTimeout);
  }

  public virtual void RegisterSpi(IFutureEvent pIFutureEvent) {
    DaApiWrapperPINVOKE.CFutureApi_RegisterSpi(swigCPtr, IFutureEvent.getCPtr(pIFutureEvent));
  }

  public virtual void RegisterNameServer(string pszNsAddress) {
    DaApiWrapperPINVOKE.CFutureApi_RegisterNameServer(swigCPtr, pszNsAddress);
  }

  public virtual bool ReqUserLogin(CFutureReqUserLoginField pReqUserLogin, int iRequestID) {
    bool ret = DaApiWrapperPINVOKE.CFutureApi_ReqUserLogin(swigCPtr, CFutureReqUserLoginField.getCPtr(pReqUserLogin), iRequestID);
    return ret;
  }

  public virtual bool ReqUserLogout(CFutureReqUserLogoutField pReqUserLogout, int iRequestID) {
    bool ret = DaApiWrapperPINVOKE.CFutureApi_ReqUserLogout(swigCPtr, CFutureReqUserLogoutField.getCPtr(pReqUserLogout), iRequestID);
    return ret;
  }

  public virtual bool ReqSafeVerify(CFutureReqSafeVerifyField pReqSafeVerify, int iRequestID) {
    bool ret = DaApiWrapperPINVOKE.CFutureApi_ReqSafeVerify(swigCPtr, CFutureReqSafeVerifyField.getCPtr(pReqSafeVerify), iRequestID);
    return ret;
  }

  public virtual bool ReqVerifyCode(CFutureReqVerifyCodeField pReqVerifyCode, int iRequestID) {
    bool ret = DaApiWrapperPINVOKE.CFutureApi_ReqVerifyCode(swigCPtr, CFutureReqVerifyCodeField.getCPtr(pReqVerifyCode), iRequestID);
    return ret;
  }

  public virtual bool ReqSetVerifyQA(CFutureReqSetVerifyQAField pReqSetVerifyQA, int iRequestID) {
    bool ret = DaApiWrapperPINVOKE.CFutureApi_ReqSetVerifyQA(swigCPtr, CFutureReqSetVerifyQAField.getCPtr(pReqSetVerifyQA), iRequestID);
    return ret;
  }

  public virtual bool ReqGetQuestion(CFutureReqGetQuestionField pReqGetQuestion, int iRequestID) {
    bool ret = DaApiWrapperPINVOKE.CFutureApi_ReqGetQuestion(swigCPtr, CFutureReqGetQuestionField.getCPtr(pReqGetQuestion), iRequestID);
    return ret;
  }

  public virtual bool ReqOrderInsert(CFutureReqOrderInsertField pReqOrderInsert, int iRequestID) {
    bool ret = DaApiWrapperPINVOKE.CFutureApi_ReqOrderInsert(swigCPtr, CFutureReqOrderInsertField.getCPtr(pReqOrderInsert), iRequestID);
    return ret;
  }

  public virtual bool ReqOrderModify(CFutureReqOrderModifyField pReqOrderModify, int iRequestID) {
    bool ret = DaApiWrapperPINVOKE.CFutureApi_ReqOrderModify(swigCPtr, CFutureReqOrderModifyField.getCPtr(pReqOrderModify), iRequestID);
    return ret;
  }

  public virtual bool ReqOrderCancel(CFutureReqOrderCancelField pReqOrderCancel, int iRequestID) {
    bool ret = DaApiWrapperPINVOKE.CFutureApi_ReqOrderCancel(swigCPtr, CFutureReqOrderCancelField.getCPtr(pReqOrderCancel), iRequestID);
    return ret;
  }

  public virtual bool ReqPasswordUpdate(CFutureReqPasswordUpdateField pReqPasswordUpdate, int iRequestID) {
    bool ret = DaApiWrapperPINVOKE.CFutureApi_ReqPasswordUpdate(swigCPtr, CFutureReqPasswordUpdateField.getCPtr(pReqPasswordUpdate), iRequestID);
    return ret;
  }

  public virtual bool ReqQryOrder(CFutureQryOrderField pQryOrder, int iRequestID) {
    bool ret = DaApiWrapperPINVOKE.CFutureApi_ReqQryOrder(swigCPtr, CFutureQryOrderField.getCPtr(pQryOrder), iRequestID);
    return ret;
  }

  public virtual bool ReqQryTrade(CFutureQryTradeField pQryTrade, int iRequestID) {
    bool ret = DaApiWrapperPINVOKE.CFutureApi_ReqQryTrade(swigCPtr, CFutureQryTradeField.getCPtr(pQryTrade), iRequestID);
    return ret;
  }

  public virtual bool ReqQryCapital(CFutureQryCapitalField pQryCapital, int iRequestID) {
    bool ret = DaApiWrapperPINVOKE.CFutureApi_ReqQryCapital(swigCPtr, CFutureQryCapitalField.getCPtr(pQryCapital), iRequestID);
    return ret;
  }

  public virtual bool ReqQryVersion(CFutureQryVersionField pQryVersion, int iRequestID) {
    bool ret = DaApiWrapperPINVOKE.CFutureApi_ReqQryVersion(swigCPtr, CFutureQryVersionField.getCPtr(pQryVersion), iRequestID);
    return ret;
  }

  public virtual bool ReqQryCurrency(CFutureQryCurrencyField pQryCurrency, int iRequestID) {
    bool ret = DaApiWrapperPINVOKE.CFutureApi_ReqQryCurrency(swigCPtr, CFutureQryCurrencyField.getCPtr(pQryCurrency), iRequestID);
    return ret;
  }

  public virtual bool ReqQryExchange(CFutureQryExchangeField pQryExchange, int iRequestID) {
    bool ret = DaApiWrapperPINVOKE.CFutureApi_ReqQryExchange(swigCPtr, CFutureQryExchangeField.getCPtr(pQryExchange), iRequestID);
    return ret;
  }

  public virtual bool ReqQryPosition(CFutureQryPositionField pQryPosition, int iRequestID) {
    bool ret = DaApiWrapperPINVOKE.CFutureApi_ReqQryPosition(swigCPtr, CFutureQryPositionField.getCPtr(pQryPosition), iRequestID);
    return ret;
  }

  public virtual bool ReqQryStrategy(CFutureQryStrategyField pQryStrategy, int iRequestID) {
    bool ret = DaApiWrapperPINVOKE.CFutureApi_ReqQryStrategy(swigCPtr, CFutureQryStrategyField.getCPtr(pQryStrategy), iRequestID);
    return ret;
  }

  public virtual bool ReqQryCommodity(CFutureQryCommodityField pQryCommodity, int iRequestID) {
    bool ret = DaApiWrapperPINVOKE.CFutureApi_ReqQryCommodity(swigCPtr, CFutureQryCommodityField.getCPtr(pQryCommodity), iRequestID);
    return ret;
  }

  public virtual bool ReqQryInstrument(CFutureQryInstrumentField pQryInstrument, int iRequestID) {
    bool ret = DaApiWrapperPINVOKE.CFutureApi_ReqQryInstrument(swigCPtr, CFutureQryInstrumentField.getCPtr(pQryInstrument), iRequestID);
    return ret;
  }

  public virtual bool ReqQryExchangeTime(CFutureQryExchangeTimeField pQryExchangeTime, int iRequestID) {
    bool ret = DaApiWrapperPINVOKE.CFutureApi_ReqQryExchangeTime(swigCPtr, CFutureQryExchangeTimeField.getCPtr(pQryExchangeTime), iRequestID);
    return ret;
  }

  public virtual bool ReqQryCommodityTime(CFutureQryCommodityTimeField pQryCommodityTime, int iRequestID) {
    bool ret = DaApiWrapperPINVOKE.CFutureApi_ReqQryCommodityTime(swigCPtr, CFutureQryCommodityTimeField.getCPtr(pQryCommodityTime), iRequestID);
    return ret;
  }

  public virtual bool ReqQryTotalPosition(CFutureQryTotalPositionField pQryTotalPosition, int iRequestID) {
    bool ret = DaApiWrapperPINVOKE.CFutureApi_ReqQryTotalPosition(swigCPtr, CFutureQryTotalPositionField.getCPtr(pQryTotalPosition), iRequestID);
    return ret;
  }

  public virtual bool ReqQryStrategyDetail(CFutureQryStrategyDetailField pQryStrategyDetail, int iRequestID) {
    bool ret = DaApiWrapperPINVOKE.CFutureApi_ReqQryStrategyDetail(swigCPtr, CFutureQryStrategyDetailField.getCPtr(pQryStrategyDetail), iRequestID);
    return ret;
  }

}

}
