//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (https://www.swig.org).
// Version 4.3.0
//
// Do not make changes to this file unless you know what you are doing - modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace DAApi.Net {

public class IFutureEvent : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal IFutureEvent(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(IFutureEvent obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  internal static global::System.Runtime.InteropServices.HandleRef swigRelease(IFutureEvent obj) {
    if (obj != null) {
      if (!obj.swigCMemOwn)
        throw new global::System.ApplicationException("Cannot release ownership as memory is not owned");
      global::System.Runtime.InteropServices.HandleRef ptr = obj.swigCPtr;
      obj.swigCMemOwn = false;
      obj.Dispose();
      return ptr;
    } else {
      return new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
    }
  }

  ~IFutureEvent() {
    Dispose(false);
  }

  public void Dispose() {
    Dispose(true);
    global::System.GC.SuppressFinalize(this);
  }

  protected virtual void Dispose(bool disposing) {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          DaApiWrapperPINVOKE.delete_IFutureEvent(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
    }
  }

  public virtual void OnFrontConnected() {
     
  }

  public virtual void OnFrontDisconnected(int iReason) {
     
  }

  public virtual void OnHeartBeatWarning(int iTimeLapse) {
     
  }

  public virtual void OnRspNeedVerify(bool bFirstLogin, bool bHasSetQA) {
     
  }

  public virtual void OnRspUserLogin(CFutureRspInfoField pRspInfo, int iRequestID, bool bIsLast) {
     
  }

  public virtual void OnRspUserLogout(CFutureRspInfoField pRspInfo, int iRequestID, bool bIsLast) {
     
  }

  public virtual void OnRspVerifyCode(CFutureRspInfoField pRspInfo, int iRequestID, bool bIsLast) {
     
  }

  public virtual void OnRspSafeVerify(CFutureRspInfoField pRspInfo, int iRequestID, bool bIsLast) {
     
  }

  public virtual void OnRspSetVerifyQA(CFutureRspInfoField pRspInfo, int iRequestID, bool bIsLast) {
     
  }

  public virtual void OnRspAccount(CFutureRspAccountField pRspAccount, CFutureRspInfoField pRspInfo, int iRequestID, bool bIsLast) {
     
  }

  public virtual void OnRspQuestion(CFutureRspQuestionField pRspVersion, CFutureRspInfoField pRspInfo, int iRequestID, bool bIsLast) {
     
  }

  public virtual void OnRspOrderInsert(CFutureRspOrderInsertField pRspOrderInsert, CFutureRspInfoField pRspInfo, int iRequestID, bool bIsLast) {
     
  }

  public virtual void OnRspOrderModify(CFutureRspOrderInsertField pRspOrderModify, CFutureRspInfoField pRspInfo, int iRequestID, bool bIsLast) {
     
  }

  public virtual void OnRspOrderCancel(CFutureRspOrderCancelField pRspOrderCancel, CFutureRspInfoField pRspInfo, int iRequestID, bool bIsLast) {
     
  }

  public virtual void OnRspPasswordUpdate(CFutureRspPasswordUpdateField pRspPasswordUpdate, CFutureRspInfoField pRspInfo, int iRequestID, bool bIsLast) {
     
  }

  public virtual void OnRtnTrade(CFutureRspTradeField pRtnTrade, CFutureRspInfoField pRspInfo, int iRequestID, bool bIsLast) {
     
  }

  public virtual void OnRtnOrder(CFutureRtnOrderField pRtnOrder, CFutureRspInfoField pRspInfo, int iRequestID, bool bIsLast) {
     
  }

  public virtual void OnRtnCapital(CFutureRtnCapitalField pRtnCapital, CFutureRspInfoField pRspInfo, int iRequestID, bool bIsLast) {
     
  }

  public virtual void OnRtnPosition(CFutureRtnOrderField pRtnPosition, CFutureRspInfoField pRspInfo, int iRequestID, bool bIsLast) {
     
  }

  public virtual void OnRspQryOrder(CFutureRspOrderField pRspOrder, CFutureRspInfoField pRspInfo, int iRequestID, bool bIsLast) {
     
  }

  public virtual void OnRspQryTrade(CFutureRspTradeField pRspTrade, CFutureRspInfoField pRspInfo, int iRequestID, bool bIsLast) {
     
  }

  public virtual void OnRspQryCapital(CFutureRspCapitalField pRspCapital, CFutureRspInfoField pRspInfo, int iRequestID, bool bIsLast) {
     
  }

  public virtual void OnRspQryVersion(CFutureRspVersionField pRspVersion, CFutureRspInfoField pRspInfo, int iRequestID, bool bIsLast) {
     
  }

  public virtual void OnRspQryPosition(CFutureRspPositionField pRspPosition, CFutureRspInfoField pRspInfo, int iRequestID, bool bIsLast) {
     
  }

  public virtual void OnRspQryCurrency(CFutureRspCurrencyField pRspCurrency, CFutureRspInfoField pRspInfo, int iRequestID, bool bIsLast) {
     
  }

  public virtual void OnRspQryExchange(CFutureRspExchangeField pRspExchange, CFutureRspInfoField pRspInfo, int iRequestID, bool bIsLast) {
     
  }

  public virtual void OnRspQryStrategy(CFutureRspStrategyField pRspStrategy, CFutureRspInfoField pRspInfo, int iRequestID, bool bIsLast) {
     
  }

  public virtual void OnRspQryCommodity(CFutureRspCommodityField pRspCommodity, CFutureRspInfoField pRspInfo, int iRequestID, bool bIsLast) {
     
  }

  public virtual void OnRspQryInstrument(CFutureRspInstrumentField pRspInstrument, CFutureRspInfoField pRspInfo, int iRequestID, bool bIsLast) {
     
  }

  public virtual void OnRspQryExchangeTime(CFutureRspExchangeTimeField pRspExchangeTime, CFutureRspInfoField pRspInfo, int iRequestID, bool bIsLast) {
     
  }

  public virtual void OnRspQryCommodityTime(CFutureRspCommodityTimeField pRspCommodityTime, CFutureRspInfoField pRspInfo, int iRequestID, bool bIsLast) {
     
  }

  public virtual void OnRspQryTotalPosition(CFutureRtnOrderField pRspTotalPosition, CFutureRspInfoField pRspInfo, int iRequestID, bool bIsLast) {
     
  }

  public virtual void OnRspQryStrategyDetail(CFutureRspStrategyDetailField pRspStrategyDetail, CFutureRspInfoField pRspInfo, int iRequestID, bool bIsLast) {
     
  }

  public IFutureEvent() : this(DaApiWrapperPINVOKE.new_IFutureEvent(), true) {
    SwigDirectorConnect();
  }

  private void SwigDirectorConnect() {
    
      swigDelegate0 = new SwigDelegateIFutureEvent_0(SwigDirectorMethodOnFrontConnected);
    
      swigDelegate1 = new SwigDelegateIFutureEvent_1(SwigDirectorMethodOnFrontDisconnected);
    
      swigDelegate2 = new SwigDelegateIFutureEvent_2(SwigDirectorMethodOnHeartBeatWarning);
    
      swigDelegate3 = new SwigDelegateIFutureEvent_3(SwigDirectorMethodOnRspNeedVerify);
    
      swigDelegate4 = new SwigDelegateIFutureEvent_4(SwigDirectorMethodOnRspUserLogin);
    
      swigDelegate5 = new SwigDelegateIFutureEvent_5(SwigDirectorMethodOnRspUserLogout);
    
      swigDelegate6 = new SwigDelegateIFutureEvent_6(SwigDirectorMethodOnRspVerifyCode);
    
      swigDelegate7 = new SwigDelegateIFutureEvent_7(SwigDirectorMethodOnRspSafeVerify);
    
      swigDelegate8 = new SwigDelegateIFutureEvent_8(SwigDirectorMethodOnRspSetVerifyQA);
    
      swigDelegate9 = new SwigDelegateIFutureEvent_9(SwigDirectorMethodOnRspAccount);
    
      swigDelegate10 = new SwigDelegateIFutureEvent_10(SwigDirectorMethodOnRspQuestion);
    
      swigDelegate11 = new SwigDelegateIFutureEvent_11(SwigDirectorMethodOnRspOrderInsert);
    
      swigDelegate12 = new SwigDelegateIFutureEvent_12(SwigDirectorMethodOnRspOrderModify);
    
      swigDelegate13 = new SwigDelegateIFutureEvent_13(SwigDirectorMethodOnRspOrderCancel);
    
      swigDelegate14 = new SwigDelegateIFutureEvent_14(SwigDirectorMethodOnRspPasswordUpdate);
    
      swigDelegate15 = new SwigDelegateIFutureEvent_15(SwigDirectorMethodOnRtnTrade);
    
      swigDelegate16 = new SwigDelegateIFutureEvent_16(SwigDirectorMethodOnRtnOrder);
    
      swigDelegate17 = new SwigDelegateIFutureEvent_17(SwigDirectorMethodOnRtnCapital);
    
      swigDelegate18 = new SwigDelegateIFutureEvent_18(SwigDirectorMethodOnRtnPosition);
    
      swigDelegate19 = new SwigDelegateIFutureEvent_19(SwigDirectorMethodOnRspQryOrder);
    
      swigDelegate20 = new SwigDelegateIFutureEvent_20(SwigDirectorMethodOnRspQryTrade);
    
      swigDelegate21 = new SwigDelegateIFutureEvent_21(SwigDirectorMethodOnRspQryCapital);
    
      swigDelegate22 = new SwigDelegateIFutureEvent_22(SwigDirectorMethodOnRspQryVersion);
    
      swigDelegate23 = new SwigDelegateIFutureEvent_23(SwigDirectorMethodOnRspQryPosition);
    
      swigDelegate24 = new SwigDelegateIFutureEvent_24(SwigDirectorMethodOnRspQryCurrency);
    
      swigDelegate25 = new SwigDelegateIFutureEvent_25(SwigDirectorMethodOnRspQryExchange);
    
      swigDelegate26 = new SwigDelegateIFutureEvent_26(SwigDirectorMethodOnRspQryStrategy);
    
      swigDelegate27 = new SwigDelegateIFutureEvent_27(SwigDirectorMethodOnRspQryCommodity);
    
      swigDelegate28 = new SwigDelegateIFutureEvent_28(SwigDirectorMethodOnRspQryInstrument);
    
      swigDelegate29 = new SwigDelegateIFutureEvent_29(SwigDirectorMethodOnRspQryExchangeTime);
    
      swigDelegate30 = new SwigDelegateIFutureEvent_30(SwigDirectorMethodOnRspQryCommodityTime);
    
      swigDelegate31 = new SwigDelegateIFutureEvent_31(SwigDirectorMethodOnRspQryTotalPosition);
    
      swigDelegate32 = new SwigDelegateIFutureEvent_32(SwigDirectorMethodOnRspQryStrategyDetail);
    DaApiWrapperPINVOKE.IFutureEvent_director_connect(swigCPtr, swigDelegate0, swigDelegate1, swigDelegate2, swigDelegate3, swigDelegate4, swigDelegate5, swigDelegate6, swigDelegate7, swigDelegate8, swigDelegate9, swigDelegate10, swigDelegate11, swigDelegate12, swigDelegate13, swigDelegate14, swigDelegate15, swigDelegate16, swigDelegate17, swigDelegate18, swigDelegate19, swigDelegate20, swigDelegate21, swigDelegate22, swigDelegate23, swigDelegate24, swigDelegate25, swigDelegate26, swigDelegate27, swigDelegate28, swigDelegate29, swigDelegate30, swigDelegate31, swigDelegate32);
  }

  private void SwigDirectorMethodOnFrontConnected() {
    OnFrontConnected();
  }

  private void SwigDirectorMethodOnFrontDisconnected(int iReason) {
    OnFrontDisconnected(iReason);
  }

  private void SwigDirectorMethodOnHeartBeatWarning(int iTimeLapse) {
    OnHeartBeatWarning(iTimeLapse);
  }

  private void SwigDirectorMethodOnRspNeedVerify(bool bFirstLogin, bool bHasSetQA) {
    OnRspNeedVerify(bFirstLogin, bHasSetQA);
  }

  private void SwigDirectorMethodOnRspUserLogin(global::System.IntPtr pRspInfo, int iRequestID, bool bIsLast) {
    OnRspUserLogin((pRspInfo == global::System.IntPtr.Zero) ? null : new CFutureRspInfoField(pRspInfo, false), iRequestID, bIsLast);
  }

  private void SwigDirectorMethodOnRspUserLogout(global::System.IntPtr pRspInfo, int iRequestID, bool bIsLast) {
    OnRspUserLogout((pRspInfo == global::System.IntPtr.Zero) ? null : new CFutureRspInfoField(pRspInfo, false), iRequestID, bIsLast);
  }

  private void SwigDirectorMethodOnRspVerifyCode(global::System.IntPtr pRspInfo, int iRequestID, bool bIsLast) {
    OnRspVerifyCode((pRspInfo == global::System.IntPtr.Zero) ? null : new CFutureRspInfoField(pRspInfo, false), iRequestID, bIsLast);
  }

  private void SwigDirectorMethodOnRspSafeVerify(global::System.IntPtr pRspInfo, int iRequestID, bool bIsLast) {
    OnRspSafeVerify((pRspInfo == global::System.IntPtr.Zero) ? null : new CFutureRspInfoField(pRspInfo, false), iRequestID, bIsLast);
  }

  private void SwigDirectorMethodOnRspSetVerifyQA(global::System.IntPtr pRspInfo, int iRequestID, bool bIsLast) {
    OnRspSetVerifyQA((pRspInfo == global::System.IntPtr.Zero) ? null : new CFutureRspInfoField(pRspInfo, false), iRequestID, bIsLast);
  }

  private void SwigDirectorMethodOnRspAccount(global::System.IntPtr pRspAccount, global::System.IntPtr pRspInfo, int iRequestID, bool bIsLast) {
    OnRspAccount((pRspAccount == global::System.IntPtr.Zero) ? null : new CFutureRspAccountField(pRspAccount, false), (pRspInfo == global::System.IntPtr.Zero) ? null : new CFutureRspInfoField(pRspInfo, false), iRequestID, bIsLast);
  }

  private void SwigDirectorMethodOnRspQuestion(global::System.IntPtr pRspVersion, global::System.IntPtr pRspInfo, int iRequestID, bool bIsLast) {
    OnRspQuestion((pRspVersion == global::System.IntPtr.Zero) ? null : new CFutureRspQuestionField(pRspVersion, false), (pRspInfo == global::System.IntPtr.Zero) ? null : new CFutureRspInfoField(pRspInfo, false), iRequestID, bIsLast);
  }

  private void SwigDirectorMethodOnRspOrderInsert(global::System.IntPtr pRspOrderInsert, global::System.IntPtr pRspInfo, int iRequestID, bool bIsLast) {
    OnRspOrderInsert((pRspOrderInsert == global::System.IntPtr.Zero) ? null : new CFutureRspOrderInsertField(pRspOrderInsert, false), (pRspInfo == global::System.IntPtr.Zero) ? null : new CFutureRspInfoField(pRspInfo, false), iRequestID, bIsLast);
  }

  private void SwigDirectorMethodOnRspOrderModify(global::System.IntPtr pRspOrderModify, global::System.IntPtr pRspInfo, int iRequestID, bool bIsLast) {
    OnRspOrderModify((pRspOrderModify == global::System.IntPtr.Zero) ? null : new CFutureRspOrderInsertField(pRspOrderModify, false), (pRspInfo == global::System.IntPtr.Zero) ? null : new CFutureRspInfoField(pRspInfo, false), iRequestID, bIsLast);
  }

  private void SwigDirectorMethodOnRspOrderCancel(global::System.IntPtr pRspOrderCancel, global::System.IntPtr pRspInfo, int iRequestID, bool bIsLast) {
    OnRspOrderCancel((pRspOrderCancel == global::System.IntPtr.Zero) ? null : new CFutureRspOrderCancelField(pRspOrderCancel, false), (pRspInfo == global::System.IntPtr.Zero) ? null : new CFutureRspInfoField(pRspInfo, false), iRequestID, bIsLast);
  }

  private void SwigDirectorMethodOnRspPasswordUpdate(global::System.IntPtr pRspPasswordUpdate, global::System.IntPtr pRspInfo, int iRequestID, bool bIsLast) {
    OnRspPasswordUpdate((pRspPasswordUpdate == global::System.IntPtr.Zero) ? null : new CFutureRspPasswordUpdateField(pRspPasswordUpdate, false), (pRspInfo == global::System.IntPtr.Zero) ? null : new CFutureRspInfoField(pRspInfo, false), iRequestID, bIsLast);
  }

  private void SwigDirectorMethodOnRtnTrade(global::System.IntPtr pRtnTrade, global::System.IntPtr pRspInfo, int iRequestID, bool bIsLast) {
    OnRtnTrade((pRtnTrade == global::System.IntPtr.Zero) ? null : new CFutureRspTradeField(pRtnTrade, false), (pRspInfo == global::System.IntPtr.Zero) ? null : new CFutureRspInfoField(pRspInfo, false), iRequestID, bIsLast);
  }

  private void SwigDirectorMethodOnRtnOrder(global::System.IntPtr pRtnOrder, global::System.IntPtr pRspInfo, int iRequestID, bool bIsLast) {
    OnRtnOrder((pRtnOrder == global::System.IntPtr.Zero) ? null : new CFutureRtnOrderField(pRtnOrder, false), (pRspInfo == global::System.IntPtr.Zero) ? null : new CFutureRspInfoField(pRspInfo, false), iRequestID, bIsLast);
  }

  private void SwigDirectorMethodOnRtnCapital(global::System.IntPtr pRtnCapital, global::System.IntPtr pRspInfo, int iRequestID, bool bIsLast) {
    OnRtnCapital((pRtnCapital == global::System.IntPtr.Zero) ? null : new CFutureRtnCapitalField(pRtnCapital, false), (pRspInfo == global::System.IntPtr.Zero) ? null : new CFutureRspInfoField(pRspInfo, false), iRequestID, bIsLast);
  }

  private void SwigDirectorMethodOnRtnPosition(global::System.IntPtr pRtnPosition, global::System.IntPtr pRspInfo, int iRequestID, bool bIsLast) {
    OnRtnPosition((pRtnPosition == global::System.IntPtr.Zero) ? null : new CFutureRtnOrderField(pRtnPosition, false), (pRspInfo == global::System.IntPtr.Zero) ? null : new CFutureRspInfoField(pRspInfo, false), iRequestID, bIsLast);
  }

  private void SwigDirectorMethodOnRspQryOrder(global::System.IntPtr pRspOrder, global::System.IntPtr pRspInfo, int iRequestID, bool bIsLast) {
    OnRspQryOrder((pRspOrder == global::System.IntPtr.Zero) ? null : new CFutureRspOrderField(pRspOrder, false), (pRspInfo == global::System.IntPtr.Zero) ? null : new CFutureRspInfoField(pRspInfo, false), iRequestID, bIsLast);
  }

  private void SwigDirectorMethodOnRspQryTrade(global::System.IntPtr pRspTrade, global::System.IntPtr pRspInfo, int iRequestID, bool bIsLast) {
    OnRspQryTrade((pRspTrade == global::System.IntPtr.Zero) ? null : new CFutureRspTradeField(pRspTrade, false), (pRspInfo == global::System.IntPtr.Zero) ? null : new CFutureRspInfoField(pRspInfo, false), iRequestID, bIsLast);
  }

  private void SwigDirectorMethodOnRspQryCapital(global::System.IntPtr pRspCapital, global::System.IntPtr pRspInfo, int iRequestID, bool bIsLast) {
    OnRspQryCapital((pRspCapital == global::System.IntPtr.Zero) ? null : new CFutureRspCapitalField(pRspCapital, false), (pRspInfo == global::System.IntPtr.Zero) ? null : new CFutureRspInfoField(pRspInfo, false), iRequestID, bIsLast);
  }

  private void SwigDirectorMethodOnRspQryVersion(global::System.IntPtr pRspVersion, global::System.IntPtr pRspInfo, int iRequestID, bool bIsLast) {
    OnRspQryVersion((pRspVersion == global::System.IntPtr.Zero) ? null : new CFutureRspVersionField(pRspVersion, false), (pRspInfo == global::System.IntPtr.Zero) ? null : new CFutureRspInfoField(pRspInfo, false), iRequestID, bIsLast);
  }

  private void SwigDirectorMethodOnRspQryPosition(global::System.IntPtr pRspPosition, global::System.IntPtr pRspInfo, int iRequestID, bool bIsLast) {
    OnRspQryPosition((pRspPosition == global::System.IntPtr.Zero) ? null : new CFutureRspPositionField(pRspPosition, false), (pRspInfo == global::System.IntPtr.Zero) ? null : new CFutureRspInfoField(pRspInfo, false), iRequestID, bIsLast);
  }

  private void SwigDirectorMethodOnRspQryCurrency(global::System.IntPtr pRspCurrency, global::System.IntPtr pRspInfo, int iRequestID, bool bIsLast) {
    OnRspQryCurrency((pRspCurrency == global::System.IntPtr.Zero) ? null : new CFutureRspCurrencyField(pRspCurrency, false), (pRspInfo == global::System.IntPtr.Zero) ? null : new CFutureRspInfoField(pRspInfo, false), iRequestID, bIsLast);
  }

  private void SwigDirectorMethodOnRspQryExchange(global::System.IntPtr pRspExchange, global::System.IntPtr pRspInfo, int iRequestID, bool bIsLast) {
    OnRspQryExchange((pRspExchange == global::System.IntPtr.Zero) ? null : new CFutureRspExchangeField(pRspExchange, false), (pRspInfo == global::System.IntPtr.Zero) ? null : new CFutureRspInfoField(pRspInfo, false), iRequestID, bIsLast);
  }

  private void SwigDirectorMethodOnRspQryStrategy(global::System.IntPtr pRspStrategy, global::System.IntPtr pRspInfo, int iRequestID, bool bIsLast) {
    OnRspQryStrategy((pRspStrategy == global::System.IntPtr.Zero) ? null : new CFutureRspStrategyField(pRspStrategy, false), (pRspInfo == global::System.IntPtr.Zero) ? null : new CFutureRspInfoField(pRspInfo, false), iRequestID, bIsLast);
  }

  private void SwigDirectorMethodOnRspQryCommodity(global::System.IntPtr pRspCommodity, global::System.IntPtr pRspInfo, int iRequestID, bool bIsLast) {
    OnRspQryCommodity((pRspCommodity == global::System.IntPtr.Zero) ? null : new CFutureRspCommodityField(pRspCommodity, false), (pRspInfo == global::System.IntPtr.Zero) ? null : new CFutureRspInfoField(pRspInfo, false), iRequestID, bIsLast);
  }

  private void SwigDirectorMethodOnRspQryInstrument(global::System.IntPtr pRspInstrument, global::System.IntPtr pRspInfo, int iRequestID, bool bIsLast) {
    OnRspQryInstrument((pRspInstrument == global::System.IntPtr.Zero) ? null : new CFutureRspInstrumentField(pRspInstrument, false), (pRspInfo == global::System.IntPtr.Zero) ? null : new CFutureRspInfoField(pRspInfo, false), iRequestID, bIsLast);
  }

  private void SwigDirectorMethodOnRspQryExchangeTime(global::System.IntPtr pRspExchangeTime, global::System.IntPtr pRspInfo, int iRequestID, bool bIsLast) {
    OnRspQryExchangeTime((pRspExchangeTime == global::System.IntPtr.Zero) ? null : new CFutureRspExchangeTimeField(pRspExchangeTime, false), (pRspInfo == global::System.IntPtr.Zero) ? null : new CFutureRspInfoField(pRspInfo, false), iRequestID, bIsLast);
  }

  private void SwigDirectorMethodOnRspQryCommodityTime(global::System.IntPtr pRspCommodityTime, global::System.IntPtr pRspInfo, int iRequestID, bool bIsLast) {
    OnRspQryCommodityTime((pRspCommodityTime == global::System.IntPtr.Zero) ? null : new CFutureRspCommodityTimeField(pRspCommodityTime, false), (pRspInfo == global::System.IntPtr.Zero) ? null : new CFutureRspInfoField(pRspInfo, false), iRequestID, bIsLast);
  }

  private void SwigDirectorMethodOnRspQryTotalPosition(global::System.IntPtr pRspTotalPosition, global::System.IntPtr pRspInfo, int iRequestID, bool bIsLast) {
    OnRspQryTotalPosition((pRspTotalPosition == global::System.IntPtr.Zero) ? null : new CFutureRtnOrderField(pRspTotalPosition, false), (pRspInfo == global::System.IntPtr.Zero) ? null : new CFutureRspInfoField(pRspInfo, false), iRequestID, bIsLast);
  }

  private void SwigDirectorMethodOnRspQryStrategyDetail(global::System.IntPtr pRspStrategyDetail, global::System.IntPtr pRspInfo, int iRequestID, bool bIsLast) {
    OnRspQryStrategyDetail((pRspStrategyDetail == global::System.IntPtr.Zero) ? null : new CFutureRspStrategyDetailField(pRspStrategyDetail, false), (pRspInfo == global::System.IntPtr.Zero) ? null : new CFutureRspInfoField(pRspInfo, false), iRequestID, bIsLast);
  }

  public delegate void SwigDelegateIFutureEvent_0();
  public delegate void SwigDelegateIFutureEvent_1(int iReason);
  public delegate void SwigDelegateIFutureEvent_2(int iTimeLapse);
  public delegate void SwigDelegateIFutureEvent_3(bool bFirstLogin, bool bHasSetQA);
  public delegate void SwigDelegateIFutureEvent_4(global::System.IntPtr pRspInfo, int iRequestID, bool bIsLast);
  public delegate void SwigDelegateIFutureEvent_5(global::System.IntPtr pRspInfo, int iRequestID, bool bIsLast);
  public delegate void SwigDelegateIFutureEvent_6(global::System.IntPtr pRspInfo, int iRequestID, bool bIsLast);
  public delegate void SwigDelegateIFutureEvent_7(global::System.IntPtr pRspInfo, int iRequestID, bool bIsLast);
  public delegate void SwigDelegateIFutureEvent_8(global::System.IntPtr pRspInfo, int iRequestID, bool bIsLast);
  public delegate void SwigDelegateIFutureEvent_9(global::System.IntPtr pRspAccount, global::System.IntPtr pRspInfo, int iRequestID, bool bIsLast);
  public delegate void SwigDelegateIFutureEvent_10(global::System.IntPtr pRspVersion, global::System.IntPtr pRspInfo, int iRequestID, bool bIsLast);
  public delegate void SwigDelegateIFutureEvent_11(global::System.IntPtr pRspOrderInsert, global::System.IntPtr pRspInfo, int iRequestID, bool bIsLast);
  public delegate void SwigDelegateIFutureEvent_12(global::System.IntPtr pRspOrderModify, global::System.IntPtr pRspInfo, int iRequestID, bool bIsLast);
  public delegate void SwigDelegateIFutureEvent_13(global::System.IntPtr pRspOrderCancel, global::System.IntPtr pRspInfo, int iRequestID, bool bIsLast);
  public delegate void SwigDelegateIFutureEvent_14(global::System.IntPtr pRspPasswordUpdate, global::System.IntPtr pRspInfo, int iRequestID, bool bIsLast);
  public delegate void SwigDelegateIFutureEvent_15(global::System.IntPtr pRtnTrade, global::System.IntPtr pRspInfo, int iRequestID, bool bIsLast);
  public delegate void SwigDelegateIFutureEvent_16(global::System.IntPtr pRtnOrder, global::System.IntPtr pRspInfo, int iRequestID, bool bIsLast);
  public delegate void SwigDelegateIFutureEvent_17(global::System.IntPtr pRtnCapital, global::System.IntPtr pRspInfo, int iRequestID, bool bIsLast);
  public delegate void SwigDelegateIFutureEvent_18(global::System.IntPtr pRtnPosition, global::System.IntPtr pRspInfo, int iRequestID, bool bIsLast);
  public delegate void SwigDelegateIFutureEvent_19(global::System.IntPtr pRspOrder, global::System.IntPtr pRspInfo, int iRequestID, bool bIsLast);
  public delegate void SwigDelegateIFutureEvent_20(global::System.IntPtr pRspTrade, global::System.IntPtr pRspInfo, int iRequestID, bool bIsLast);
  public delegate void SwigDelegateIFutureEvent_21(global::System.IntPtr pRspCapital, global::System.IntPtr pRspInfo, int iRequestID, bool bIsLast);
  public delegate void SwigDelegateIFutureEvent_22(global::System.IntPtr pRspVersion, global::System.IntPtr pRspInfo, int iRequestID, bool bIsLast);
  public delegate void SwigDelegateIFutureEvent_23(global::System.IntPtr pRspPosition, global::System.IntPtr pRspInfo, int iRequestID, bool bIsLast);
  public delegate void SwigDelegateIFutureEvent_24(global::System.IntPtr pRspCurrency, global::System.IntPtr pRspInfo, int iRequestID, bool bIsLast);
  public delegate void SwigDelegateIFutureEvent_25(global::System.IntPtr pRspExchange, global::System.IntPtr pRspInfo, int iRequestID, bool bIsLast);
  public delegate void SwigDelegateIFutureEvent_26(global::System.IntPtr pRspStrategy, global::System.IntPtr pRspInfo, int iRequestID, bool bIsLast);
  public delegate void SwigDelegateIFutureEvent_27(global::System.IntPtr pRspCommodity, global::System.IntPtr pRspInfo, int iRequestID, bool bIsLast);
  public delegate void SwigDelegateIFutureEvent_28(global::System.IntPtr pRspInstrument, global::System.IntPtr pRspInfo, int iRequestID, bool bIsLast);
  public delegate void SwigDelegateIFutureEvent_29(global::System.IntPtr pRspExchangeTime, global::System.IntPtr pRspInfo, int iRequestID, bool bIsLast);
  public delegate void SwigDelegateIFutureEvent_30(global::System.IntPtr pRspCommodityTime, global::System.IntPtr pRspInfo, int iRequestID, bool bIsLast);
  public delegate void SwigDelegateIFutureEvent_31(global::System.IntPtr pRspTotalPosition, global::System.IntPtr pRspInfo, int iRequestID, bool bIsLast);
  public delegate void SwigDelegateIFutureEvent_32(global::System.IntPtr pRspStrategyDetail, global::System.IntPtr pRspInfo, int iRequestID, bool bIsLast);

  private SwigDelegateIFutureEvent_0 swigDelegate0;
  private SwigDelegateIFutureEvent_1 swigDelegate1;
  private SwigDelegateIFutureEvent_2 swigDelegate2;
  private SwigDelegateIFutureEvent_3 swigDelegate3;
  private SwigDelegateIFutureEvent_4 swigDelegate4;
  private SwigDelegateIFutureEvent_5 swigDelegate5;
  private SwigDelegateIFutureEvent_6 swigDelegate6;
  private SwigDelegateIFutureEvent_7 swigDelegate7;
  private SwigDelegateIFutureEvent_8 swigDelegate8;
  private SwigDelegateIFutureEvent_9 swigDelegate9;
  private SwigDelegateIFutureEvent_10 swigDelegate10;
  private SwigDelegateIFutureEvent_11 swigDelegate11;
  private SwigDelegateIFutureEvent_12 swigDelegate12;
  private SwigDelegateIFutureEvent_13 swigDelegate13;
  private SwigDelegateIFutureEvent_14 swigDelegate14;
  private SwigDelegateIFutureEvent_15 swigDelegate15;
  private SwigDelegateIFutureEvent_16 swigDelegate16;
  private SwigDelegateIFutureEvent_17 swigDelegate17;
  private SwigDelegateIFutureEvent_18 swigDelegate18;
  private SwigDelegateIFutureEvent_19 swigDelegate19;
  private SwigDelegateIFutureEvent_20 swigDelegate20;
  private SwigDelegateIFutureEvent_21 swigDelegate21;
  private SwigDelegateIFutureEvent_22 swigDelegate22;
  private SwigDelegateIFutureEvent_23 swigDelegate23;
  private SwigDelegateIFutureEvent_24 swigDelegate24;
  private SwigDelegateIFutureEvent_25 swigDelegate25;
  private SwigDelegateIFutureEvent_26 swigDelegate26;
  private SwigDelegateIFutureEvent_27 swigDelegate27;
  private SwigDelegateIFutureEvent_28 swigDelegate28;
  private SwigDelegateIFutureEvent_29 swigDelegate29;
  private SwigDelegateIFutureEvent_30 swigDelegate30;
  private SwigDelegateIFutureEvent_31 swigDelegate31;
  private SwigDelegateIFutureEvent_32 swigDelegate32;
}

}
