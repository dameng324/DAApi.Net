//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (https://www.swig.org).
// Version 4.3.0
//
// Do not make changes to this file unless you know what you are doing - modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace DAApi.Net {

public class CFutureRspCommodityField : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal CFutureRspCommodityField(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(CFutureRspCommodityField obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  internal static global::System.Runtime.InteropServices.HandleRef swigRelease(CFutureRspCommodityField obj) {
    if (obj != null) {
      if (!obj.swigCMemOwn)
        throw new global::System.ApplicationException("Cannot release ownership as memory is not owned");
      global::System.Runtime.InteropServices.HandleRef ptr = obj.swigCPtr;
      obj.swigCMemOwn = false;
      obj.Dispose();
      return ptr;
    } else {
      return new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
    }
  }

  ~CFutureRspCommodityField() {
    Dispose(false);
  }

  public void Dispose() {
    Dispose(true);
    global::System.GC.SuppressFinalize(this);
  }

  protected virtual void Dispose(bool disposing) {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          DaApiWrapperPINVOKE.delete_CFutureRspCommodityField(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
    }
  }

  public string CommodityNo {
    set {
      DaApiWrapperPINVOKE.CFutureRspCommodityField_CommodityNo_set(swigCPtr, value);
    } 
    get {
      string ret = DaApiWrapperPINVOKE.CFutureRspCommodityField_CommodityNo_get(swigCPtr);
      return ret;
    } 
  }

  public string ExchangeNo {
    set {
      DaApiWrapperPINVOKE.CFutureRspCommodityField_ExchangeNo_set(swigCPtr, value);
    } 
    get {
      string ret = DaApiWrapperPINVOKE.CFutureRspCommodityField_ExchangeNo_get(swigCPtr);
      return ret;
    } 
  }

  public string CommodityType {
    set {
      DaApiWrapperPINVOKE.CFutureRspCommodityField_CommodityType_set(swigCPtr, value);
    } 
    get {
      string ret = DaApiWrapperPINVOKE.CFutureRspCommodityField_CommodityType_get(swigCPtr);
      return ret;
    } 
  }

  public string Name {
    set {
      DaApiWrapperPINVOKE.CFutureRspCommodityField_Name_set(swigCPtr, value);
    } 
    get {
      string ret = DaApiWrapperPINVOKE.CFutureRspCommodityField_Name_get(swigCPtr);
      return ret;
    } 
  }

  public string Enabled {
    set {
      DaApiWrapperPINVOKE.CFutureRspCommodityField_Enabled_set(swigCPtr, value);
    } 
    get {
      string ret = DaApiWrapperPINVOKE.CFutureRspCommodityField_Enabled_get(swigCPtr);
      return ret;
    } 
  }

  public string RegDate {
    set {
      DaApiWrapperPINVOKE.CFutureRspCommodityField_RegDate_set(swigCPtr, value);
    } 
    get {
      string ret = DaApiWrapperPINVOKE.CFutureRspCommodityField_RegDate_get(swigCPtr);
      return ret;
    } 
  }

  public string CurrencyNo {
    set {
      DaApiWrapperPINVOKE.CFutureRspCommodityField_CurrencyNo_set(swigCPtr, value);
    } 
    get {
      string ret = DaApiWrapperPINVOKE.CFutureRspCommodityField_CurrencyNo_get(swigCPtr);
      return ret;
    } 
  }

  public double ProductDot {
    set {
      DaApiWrapperPINVOKE.CFutureRspCommodityField_ProductDot_set(swigCPtr, value);
    } 
    get {
      double ret = DaApiWrapperPINVOKE.CFutureRspCommodityField_ProductDot_get(swigCPtr);
      return ret;
    } 
  }

  public double LowerTick {
    set {
      DaApiWrapperPINVOKE.CFutureRspCommodityField_LowerTick_set(swigCPtr, value);
    } 
    get {
      double ret = DaApiWrapperPINVOKE.CFutureRspCommodityField_LowerTick_get(swigCPtr);
      return ret;
    } 
  }

  public double UpperTick {
    set {
      DaApiWrapperPINVOKE.CFutureRspCommodityField_UpperTick_set(swigCPtr, value);
    } 
    get {
      double ret = DaApiWrapperPINVOKE.CFutureRspCommodityField_UpperTick_get(swigCPtr);
      return ret;
    } 
  }

  public int DotNum {
    set {
      DaApiWrapperPINVOKE.CFutureRspCommodityField_DotNum_set(swigCPtr, value);
    } 
    get {
      int ret = DaApiWrapperPINVOKE.CFutureRspCommodityField_DotNum_get(swigCPtr);
      return ret;
    } 
  }

  public int StrikeCommodityId {
    set {
      DaApiWrapperPINVOKE.CFutureRspCommodityField_StrikeCommodityId_set(swigCPtr, value);
    } 
    get {
      int ret = DaApiWrapperPINVOKE.CFutureRspCommodityField_StrikeCommodityId_get(swigCPtr);
      return ret;
    } 
  }

  public string OptionStyle {
    set {
      DaApiWrapperPINVOKE.CFutureRspCommodityField_OptionStyle_set(swigCPtr, value);
    } 
    get {
      string ret = DaApiWrapperPINVOKE.CFutureRspCommodityField_OptionStyle_get(swigCPtr);
      return ret;
    } 
  }

  public string ExchangeNo2 {
    set {
      DaApiWrapperPINVOKE.CFutureRspCommodityField_ExchangeNo2_set(swigCPtr, value);
    } 
    get {
      string ret = DaApiWrapperPINVOKE.CFutureRspCommodityField_ExchangeNo2_get(swigCPtr);
      return ret;
    } 
  }

  public string IsSFuture {
    set {
      DaApiWrapperPINVOKE.CFutureRspCommodityField_IsSFuture_set(swigCPtr, value);
    } 
    get {
      string ret = DaApiWrapperPINVOKE.CFutureRspCommodityField_IsSFuture_get(swigCPtr);
      return ret;
    } 
  }

  public CFutureRspCommodityField() : this(DaApiWrapperPINVOKE.new_CFutureRspCommodityField(), true) {
  }

}

}
