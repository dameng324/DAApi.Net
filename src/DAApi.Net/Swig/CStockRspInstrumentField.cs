//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (https://www.swig.org).
// Version 4.3.0
//
// Do not make changes to this file unless you know what you are doing - modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace DAApi.Net {

public class CStockRspInstrumentField : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal CStockRspInstrumentField(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(CStockRspInstrumentField obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  internal static global::System.Runtime.InteropServices.HandleRef swigRelease(CStockRspInstrumentField obj) {
    if (obj != null) {
      if (!obj.swigCMemOwn)
        throw new global::System.ApplicationException("Cannot release ownership as memory is not owned");
      global::System.Runtime.InteropServices.HandleRef ptr = obj.swigCPtr;
      obj.swigCMemOwn = false;
      obj.Dispose();
      return ptr;
    } else {
      return new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
    }
  }

  ~CStockRspInstrumentField() {
    Dispose(false);
  }

  public void Dispose() {
    Dispose(true);
    global::System.GC.SuppressFinalize(this);
  }

  protected virtual void Dispose(bool disposing) {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          DaApiWrapperPINVOKE.delete_CStockRspInstrumentField(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
    }
  }

  public string ExchangeNo {
    set {
      DaApiWrapperPINVOKE.CStockRspInstrumentField_ExchangeNo_set(swigCPtr, value);
    } 
    get {
      string ret = DaApiWrapperPINVOKE.CStockRspInstrumentField_ExchangeNo_get(swigCPtr);
      return ret;
    } 
  }

  public string ExchangeName {
    set {
      DaApiWrapperPINVOKE.CStockRspInstrumentField_ExchangeName_set(swigCPtr, value);
    } 
    get {
      string ret = DaApiWrapperPINVOKE.CStockRspInstrumentField_ExchangeName_get(swigCPtr);
      return ret;
    } 
  }

  public string CommodityNo {
    set {
      DaApiWrapperPINVOKE.CStockRspInstrumentField_CommodityNo_set(swigCPtr, value);
    } 
    get {
      string ret = DaApiWrapperPINVOKE.CStockRspInstrumentField_CommodityNo_get(swigCPtr);
      return ret;
    } 
  }

  public string CommodityName {
    set {
      DaApiWrapperPINVOKE.CStockRspInstrumentField_CommodityName_set(swigCPtr, value);
    } 
    get {
      string ret = DaApiWrapperPINVOKE.CStockRspInstrumentField_CommodityName_get(swigCPtr);
      return ret;
    } 
  }

  public string CommodityType {
    set {
      DaApiWrapperPINVOKE.CStockRspInstrumentField_CommodityType_set(swigCPtr, value);
    } 
    get {
      string ret = DaApiWrapperPINVOKE.CStockRspInstrumentField_CommodityType_get(swigCPtr);
      return ret;
    } 
  }

  public string CurrencyNo {
    set {
      DaApiWrapperPINVOKE.CStockRspInstrumentField_CurrencyNo_set(swigCPtr, value);
    } 
    get {
      string ret = DaApiWrapperPINVOKE.CStockRspInstrumentField_CurrencyNo_get(swigCPtr);
      return ret;
    } 
  }

  public string CurrencyName {
    set {
      DaApiWrapperPINVOKE.CStockRspInstrumentField_CurrencyName_set(swigCPtr, value);
    } 
    get {
      string ret = DaApiWrapperPINVOKE.CStockRspInstrumentField_CurrencyName_get(swigCPtr);
      return ret;
    } 
  }

  public double ProductDot {
    set {
      DaApiWrapperPINVOKE.CStockRspInstrumentField_ProductDot_set(swigCPtr, value);
    } 
    get {
      double ret = DaApiWrapperPINVOKE.CStockRspInstrumentField_ProductDot_get(swigCPtr);
      return ret;
    } 
  }

  public double UpperTick {
    set {
      DaApiWrapperPINVOKE.CStockRspInstrumentField_UpperTick_set(swigCPtr, value);
    } 
    get {
      double ret = DaApiWrapperPINVOKE.CStockRspInstrumentField_UpperTick_get(swigCPtr);
      return ret;
    } 
  }

  public double SettlePrice {
    set {
      DaApiWrapperPINVOKE.CStockRspInstrumentField_SettlePrice_set(swigCPtr, value);
    } 
    get {
      double ret = DaApiWrapperPINVOKE.CStockRspInstrumentField_SettlePrice_get(swigCPtr);
      return ret;
    } 
  }

  public string TradeMonth {
    set {
      DaApiWrapperPINVOKE.CStockRspInstrumentField_TradeMonth_set(swigCPtr, value);
    } 
    get {
      string ret = DaApiWrapperPINVOKE.CStockRspInstrumentField_TradeMonth_get(swigCPtr);
      return ret;
    } 
  }

  public int DotNum {
    set {
      DaApiWrapperPINVOKE.CStockRspInstrumentField_DotNum_set(swigCPtr, value);
    } 
    get {
      int ret = DaApiWrapperPINVOKE.CStockRspInstrumentField_DotNum_get(swigCPtr);
      return ret;
    } 
  }

  public int LowerTick {
    set {
      DaApiWrapperPINVOKE.CStockRspInstrumentField_LowerTick_set(swigCPtr, value);
    } 
    get {
      int ret = DaApiWrapperPINVOKE.CStockRspInstrumentField_LowerTick_get(swigCPtr);
      return ret;
    } 
  }

  public int DotNumCarry {
    set {
      DaApiWrapperPINVOKE.CStockRspInstrumentField_DotNumCarry_set(swigCPtr, value);
    } 
    get {
      int ret = DaApiWrapperPINVOKE.CStockRspInstrumentField_DotNumCarry_get(swigCPtr);
      return ret;
    } 
  }

  public double UpperTickCarry {
    set {
      DaApiWrapperPINVOKE.CStockRspInstrumentField_UpperTickCarry_set(swigCPtr, value);
    } 
    get {
      double ret = DaApiWrapperPINVOKE.CStockRspInstrumentField_UpperTickCarry_get(swigCPtr);
      return ret;
    } 
  }

  public string FirstNoticeDay {
    set {
      DaApiWrapperPINVOKE.CStockRspInstrumentField_FirstNoticeDay_set(swigCPtr, value);
    } 
    get {
      string ret = DaApiWrapperPINVOKE.CStockRspInstrumentField_FirstNoticeDay_get(swigCPtr);
      return ret;
    } 
  }

  public double FreezenPercent {
    set {
      DaApiWrapperPINVOKE.CStockRspInstrumentField_FreezenPercent_set(swigCPtr, value);
    } 
    get {
      double ret = DaApiWrapperPINVOKE.CStockRspInstrumentField_FreezenPercent_get(swigCPtr);
      return ret;
    } 
  }

  public double FreezenMoney {
    set {
      DaApiWrapperPINVOKE.CStockRspInstrumentField_FreezenMoney_set(swigCPtr, value);
    } 
    get {
      double ret = DaApiWrapperPINVOKE.CStockRspInstrumentField_FreezenMoney_get(swigCPtr);
      return ret;
    } 
  }

  public double FeeMoney {
    set {
      DaApiWrapperPINVOKE.CStockRspInstrumentField_FeeMoney_set(swigCPtr, value);
    } 
    get {
      double ret = DaApiWrapperPINVOKE.CStockRspInstrumentField_FeeMoney_get(swigCPtr);
      return ret;
    } 
  }

  public double FeePercent {
    set {
      DaApiWrapperPINVOKE.CStockRspInstrumentField_FeePercent_set(swigCPtr, value);
    } 
    get {
      double ret = DaApiWrapperPINVOKE.CStockRspInstrumentField_FeePercent_get(swigCPtr);
      return ret;
    } 
  }

  public double PriceStrike {
    set {
      DaApiWrapperPINVOKE.CStockRspInstrumentField_PriceStrike_set(swigCPtr, value);
    } 
    get {
      double ret = DaApiWrapperPINVOKE.CStockRspInstrumentField_PriceStrike_get(swigCPtr);
      return ret;
    } 
  }

  public double ProductDotStrike {
    set {
      DaApiWrapperPINVOKE.CStockRspInstrumentField_ProductDotStrike_set(swigCPtr, value);
    } 
    get {
      double ret = DaApiWrapperPINVOKE.CStockRspInstrumentField_ProductDotStrike_get(swigCPtr);
      return ret;
    } 
  }

  public double UpperTickStrike {
    set {
      DaApiWrapperPINVOKE.CStockRspInstrumentField_UpperTickStrike_set(swigCPtr, value);
    } 
    get {
      double ret = DaApiWrapperPINVOKE.CStockRspInstrumentField_UpperTickStrike_get(swigCPtr);
      return ret;
    } 
  }

  public string LastTradeDay {
    set {
      DaApiWrapperPINVOKE.CStockRspInstrumentField_LastTradeDay_set(swigCPtr, value);
    } 
    get {
      string ret = DaApiWrapperPINVOKE.CStockRspInstrumentField_LastTradeDay_get(swigCPtr);
      return ret;
    } 
  }

  public string LastUpdateDay {
    set {
      DaApiWrapperPINVOKE.CStockRspInstrumentField_LastUpdateDay_set(swigCPtr, value);
    } 
    get {
      string ret = DaApiWrapperPINVOKE.CStockRspInstrumentField_LastUpdateDay_get(swigCPtr);
      return ret;
    } 
  }

  public double CriticalPrice {
    set {
      DaApiWrapperPINVOKE.CStockRspInstrumentField_CriticalPrice_set(swigCPtr, value);
    } 
    get {
      double ret = DaApiWrapperPINVOKE.CStockRspInstrumentField_CriticalPrice_get(swigCPtr);
      return ret;
    } 
  }

  public double CriticalMinChangedPrice {
    set {
      DaApiWrapperPINVOKE.CStockRspInstrumentField_CriticalMinChangedPrice_set(swigCPtr, value);
    } 
    get {
      double ret = DaApiWrapperPINVOKE.CStockRspInstrumentField_CriticalMinChangedPrice_get(swigCPtr);
      return ret;
    } 
  }

  public string ExchangeSub {
    set {
      DaApiWrapperPINVOKE.CStockRspInstrumentField_ExchangeSub_set(swigCPtr, value);
    } 
    get {
      string ret = DaApiWrapperPINVOKE.CStockRspInstrumentField_ExchangeSub_get(swigCPtr);
      return ret;
    } 
  }

  public string OptionType {
    set {
      DaApiWrapperPINVOKE.CStockRspInstrumentField_OptionType_set(swigCPtr, value);
    } 
    get {
      string ret = DaApiWrapperPINVOKE.CStockRspInstrumentField_OptionType_get(swigCPtr);
      return ret;
    } 
  }

  public string OptionMonth {
    set {
      DaApiWrapperPINVOKE.CStockRspInstrumentField_OptionMonth_set(swigCPtr, value);
    } 
    get {
      string ret = DaApiWrapperPINVOKE.CStockRspInstrumentField_OptionMonth_get(swigCPtr);
      return ret;
    } 
  }

  public string OptionStrikePrice {
    set {
      DaApiWrapperPINVOKE.CStockRspInstrumentField_OptionStrikePrice_set(swigCPtr, value);
    } 
    get {
      string ret = DaApiWrapperPINVOKE.CStockRspInstrumentField_OptionStrikePrice_get(swigCPtr);
      return ret;
    } 
  }

  public string OptionCommodityNo {
    set {
      DaApiWrapperPINVOKE.CStockRspInstrumentField_OptionCommodityNo_set(swigCPtr, value);
    } 
    get {
      string ret = DaApiWrapperPINVOKE.CStockRspInstrumentField_OptionCommodityNo_get(swigCPtr);
      return ret;
    } 
  }

  public string OptionContractNo {
    set {
      DaApiWrapperPINVOKE.CStockRspInstrumentField_OptionContractNo_set(swigCPtr, value);
    } 
    get {
      string ret = DaApiWrapperPINVOKE.CStockRspInstrumentField_OptionContractNo_get(swigCPtr);
      return ret;
    } 
  }

  public string MortgagePercent {
    set {
      DaApiWrapperPINVOKE.CStockRspInstrumentField_MortgagePercent_set(swigCPtr, value);
    } 
    get {
      string ret = DaApiWrapperPINVOKE.CStockRspInstrumentField_MortgagePercent_get(swigCPtr);
      return ret;
    } 
  }

  public string UpperTickCode {
    set {
      DaApiWrapperPINVOKE.CStockRspInstrumentField_UpperTickCode_set(swigCPtr, value);
    } 
    get {
      string ret = DaApiWrapperPINVOKE.CStockRspInstrumentField_UpperTickCode_get(swigCPtr);
      return ret;
    } 
  }

  public string LotSize {
    set {
      DaApiWrapperPINVOKE.CStockRspInstrumentField_LotSize_set(swigCPtr, value);
    } 
    get {
      string ret = DaApiWrapperPINVOKE.CStockRspInstrumentField_LotSize_get(swigCPtr);
      return ret;
    } 
  }

  public string FlatTime {
    set {
      DaApiWrapperPINVOKE.CStockRspInstrumentField_FlatTime_set(swigCPtr, value);
    } 
    get {
      string ret = DaApiWrapperPINVOKE.CStockRspInstrumentField_FlatTime_get(swigCPtr);
      return ret;
    } 
  }

  public string CommodityFNameEN {
    set {
      DaApiWrapperPINVOKE.CStockRspInstrumentField_CommodityFNameEN_set(swigCPtr, value);
    } 
    get {
      string ret = DaApiWrapperPINVOKE.CStockRspInstrumentField_CommodityFNameEN_get(swigCPtr);
      return ret;
    } 
  }

  public string CanSell {
    set {
      DaApiWrapperPINVOKE.CStockRspInstrumentField_CanSell_set(swigCPtr, value);
    } 
    get {
      string ret = DaApiWrapperPINVOKE.CStockRspInstrumentField_CanSell_get(swigCPtr);
      return ret;
    } 
  }

  public double SellRate {
    set {
      DaApiWrapperPINVOKE.CStockRspInstrumentField_SellRate_set(swigCPtr, value);
    } 
    get {
      double ret = DaApiWrapperPINVOKE.CStockRspInstrumentField_SellRate_get(swigCPtr);
      return ret;
    } 
  }

  public double SellMax {
    set {
      DaApiWrapperPINVOKE.CStockRspInstrumentField_SellMax_set(swigCPtr, value);
    } 
    get {
      double ret = DaApiWrapperPINVOKE.CStockRspInstrumentField_SellMax_get(swigCPtr);
      return ret;
    } 
  }

  public double StrikeRate {
    set {
      DaApiWrapperPINVOKE.CStockRspInstrumentField_StrikeRate_set(swigCPtr, value);
    } 
    get {
      double ret = DaApiWrapperPINVOKE.CStockRspInstrumentField_StrikeRate_get(swigCPtr);
      return ret;
    } 
  }

  public double StrikePrice {
    set {
      DaApiWrapperPINVOKE.CStockRspInstrumentField_StrikePrice_set(swigCPtr, value);
    } 
    get {
      double ret = DaApiWrapperPINVOKE.CStockRspInstrumentField_StrikePrice_get(swigCPtr);
      return ret;
    } 
  }

  public double ReceivePrice {
    set {
      DaApiWrapperPINVOKE.CStockRspInstrumentField_ReceivePrice_set(swigCPtr, value);
    } 
    get {
      double ret = DaApiWrapperPINVOKE.CStockRspInstrumentField_ReceivePrice_get(swigCPtr);
      return ret;
    } 
  }

  public string ExpireDate {
    set {
      DaApiWrapperPINVOKE.CStockRspInstrumentField_ExpireDate_set(swigCPtr, value);
    } 
    get {
      string ret = DaApiWrapperPINVOKE.CStockRspInstrumentField_ExpireDate_get(swigCPtr);
      return ret;
    } 
  }

  public double SellRateKeep {
    set {
      DaApiWrapperPINVOKE.CStockRspInstrumentField_SellRateKeep_set(swigCPtr, value);
    } 
    get {
      double ret = DaApiWrapperPINVOKE.CStockRspInstrumentField_SellRateKeep_get(swigCPtr);
      return ret;
    } 
  }

  public string StrikeCommodityNo {
    set {
      DaApiWrapperPINVOKE.CStockRspInstrumentField_StrikeCommodityNo_set(swigCPtr, value);
    } 
    get {
      string ret = DaApiWrapperPINVOKE.CStockRspInstrumentField_StrikeCommodityNo_get(swigCPtr);
      return ret;
    } 
  }

  public string CallPutFlag {
    set {
      DaApiWrapperPINVOKE.CStockRspInstrumentField_CallPutFlag_set(swigCPtr, value);
    } 
    get {
      string ret = DaApiWrapperPINVOKE.CStockRspInstrumentField_CallPutFlag_get(swigCPtr);
      return ret;
    } 
  }

  public string Publisher {
    set {
      DaApiWrapperPINVOKE.CStockRspInstrumentField_Publisher_set(swigCPtr, value);
    } 
    get {
      string ret = DaApiWrapperPINVOKE.CStockRspInstrumentField_Publisher_get(swigCPtr);
      return ret;
    } 
  }

  public CStockRspInstrumentField() : this(DaApiWrapperPINVOKE.new_CStockRspInstrumentField(), true) {
  }

}

}
