//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (https://www.swig.org).
// Version 4.3.0
//
// Do not make changes to this file unless you know what you are doing - modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace DAApi.Net {

public class IStockEvent : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal IStockEvent(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(IStockEvent obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  internal static global::System.Runtime.InteropServices.HandleRef swigRelease(IStockEvent obj) {
    if (obj != null) {
      if (!obj.swigCMemOwn)
        throw new global::System.ApplicationException("Cannot release ownership as memory is not owned");
      global::System.Runtime.InteropServices.HandleRef ptr = obj.swigCPtr;
      obj.swigCMemOwn = false;
      obj.Dispose();
      return ptr;
    } else {
      return new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
    }
  }

  ~IStockEvent() {
    Dispose(false);
  }

  public void Dispose() {
    Dispose(true);
    global::System.GC.SuppressFinalize(this);
  }

  protected virtual void Dispose(bool disposing) {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          DaApiWrapperPINVOKE.delete_IStockEvent(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
    }
  }

  public virtual void OnFrontConnected() {
     
  }

  public virtual void OnFrontDisconnected(int iReason) {
     
  }

  public virtual void OnHeartBeatWarning(int iTimeLapse) {
     
  }

  public virtual void OnRspNeedVerify(bool bFirstLogin, bool bHasSetQA) {
     
  }

  public virtual void OnRspUserLogin(CStockRspInfoField pRspInfo, int iRequestID, bool bIsLast) {
     
  }

  public virtual void OnRspUserLogout(CStockRspInfoField pRspInfo, int iRequestID, bool bIsLast) {
     
  }

  public virtual void OnRspVerifyCode(CStockRspInfoField pRspInfo, int iRequestID, bool bIsLast) {
     
  }

  public virtual void OnRspSafeVerify(CStockRspInfoField pRspInfo, int iRequestID, bool bIsLast) {
     
  }

  public virtual void OnRspSetVerifyQA(CStockRspInfoField pRspInfo, int iRequestID, bool bIsLast) {
     
  }

  public virtual void OnRspAccount(CStockRspAccountField pRspAccount, CStockRspInfoField pRspInfo, int iRequestID, bool bIsLast) {
     
  }

  public virtual void OnRspQuestion(CStockRspQuestionField pRspQuestion, CStockRspInfoField pRspInfo, int iRequestID, bool bIsLast) {
     
  }

  public virtual void OnRspOrderInsert(CStockRspOrderInsertField pRspOrderInsert, CStockRspInfoField pRspInfo, int iRequestID, bool bIsLast) {
     
  }

  public virtual void OnRspOrderModify(CStockRspOrderInsertField pRspOrderModify, CStockRspInfoField pRspInfo, int iRequestID, bool bIsLast) {
     
  }

  public virtual void OnRspOrderCancel(CStockRspOrderCancelField pRspOrderCancel, CStockRspInfoField pRspInfo, int iRequestID, bool bIsLast) {
     
  }

  public virtual void OnRspPasswordUpdate(CStockRspPasswordUpdateField pRspPasswordUpdate, CStockRspInfoField pRspInfo, int iRequestID, bool bIsLast) {
     
  }

  public virtual void OnRtnTrade(CStockRspTradeField pRtnTrade, CStockRspInfoField pRspInfo, int iRequestID, bool bIsLast) {
     
  }

  public virtual void OnRtnOrder(CStockRtnOrderField pRtnOrder, CStockRspInfoField pRspInfo, int iRequestID, bool bIsLast) {
     
  }

  public virtual void OnRtnCapital(CStockRtnCapitalField pRtnCapital, CStockRspInfoField pRspInfo, int iRequestID, bool bIsLast) {
     
  }

  public virtual void OnRtnPosition(CStockRspPositionField pRtnPosition, CStockRspInfoField pRspInfo, int iRequestID, bool bIsLast) {
     
  }

  public virtual void OnRspQryTick(CStockRspTickField pRspTick, CStockRspInfoField pRspInfo, int iRequestID, bool bIsLast) {
     
  }

  public virtual void OnRspQryOrder(CStockRspOrderField pRspOrder, CStockRspInfoField pRspInfo, int iRequestID, bool bIsLast) {
     
  }

  public virtual void OnRspQryTrade(CStockRspTradeField pRspTrade, CStockRspInfoField pRspInfo, int iRequestID, bool bIsLast) {
     
  }

  public virtual void OnRspQryCapital(CStockRspCapitalField pRspCapital, CStockRspInfoField pRspInfo, int iRequestID, bool bIsLast) {
     
  }

  public virtual void OnRspQryVersion(CStockRspVersionField pRspVersion, CStockRspInfoField pRspInfo, int iRequestID, bool bIsLast) {
     
  }

  public virtual void OnRspQryPosition(CStockRspPositionField pRspPosition, CStockRspInfoField pRspInfo, int iRequestID, bool bIsLast) {
     
  }

  public virtual void OnRspQryCurrency(CStockRspCurrencyField pRspCurrency, CStockRspInfoField pRspInfo, int iRequestID, bool bIsLast) {
     
  }

  public virtual void OnRspQryExchange(CStockRspExchangeField pRspExchange, CStockRspInfoField pRspInfo, int iRequestID, bool bIsLast) {
     
  }

  public virtual void OnRspQryInstrument(CStockRspInstrumentField pRspInstrument, CStockRspInfoField pRspInfo, int iRequestID, bool bIsLast) {
     
  }

  public IStockEvent() : this(DaApiWrapperPINVOKE.new_IStockEvent(), true) {
    SwigDirectorConnect();
  }

  private void SwigDirectorConnect() {
    
      swigDelegate0 = new SwigDelegateIStockEvent_0(SwigDirectorMethodOnFrontConnected);
    
      swigDelegate1 = new SwigDelegateIStockEvent_1(SwigDirectorMethodOnFrontDisconnected);
    
      swigDelegate2 = new SwigDelegateIStockEvent_2(SwigDirectorMethodOnHeartBeatWarning);
    
      swigDelegate3 = new SwigDelegateIStockEvent_3(SwigDirectorMethodOnRspNeedVerify);
    
      swigDelegate4 = new SwigDelegateIStockEvent_4(SwigDirectorMethodOnRspUserLogin);
    
      swigDelegate5 = new SwigDelegateIStockEvent_5(SwigDirectorMethodOnRspUserLogout);
    
      swigDelegate6 = new SwigDelegateIStockEvent_6(SwigDirectorMethodOnRspVerifyCode);
    
      swigDelegate7 = new SwigDelegateIStockEvent_7(SwigDirectorMethodOnRspSafeVerify);
    
      swigDelegate8 = new SwigDelegateIStockEvent_8(SwigDirectorMethodOnRspSetVerifyQA);
    
      swigDelegate9 = new SwigDelegateIStockEvent_9(SwigDirectorMethodOnRspAccount);
    
      swigDelegate10 = new SwigDelegateIStockEvent_10(SwigDirectorMethodOnRspQuestion);
    
      swigDelegate11 = new SwigDelegateIStockEvent_11(SwigDirectorMethodOnRspOrderInsert);
    
      swigDelegate12 = new SwigDelegateIStockEvent_12(SwigDirectorMethodOnRspOrderModify);
    
      swigDelegate13 = new SwigDelegateIStockEvent_13(SwigDirectorMethodOnRspOrderCancel);
    
      swigDelegate14 = new SwigDelegateIStockEvent_14(SwigDirectorMethodOnRspPasswordUpdate);
    
      swigDelegate15 = new SwigDelegateIStockEvent_15(SwigDirectorMethodOnRtnTrade);
    
      swigDelegate16 = new SwigDelegateIStockEvent_16(SwigDirectorMethodOnRtnOrder);
    
      swigDelegate17 = new SwigDelegateIStockEvent_17(SwigDirectorMethodOnRtnCapital);
    
      swigDelegate18 = new SwigDelegateIStockEvent_18(SwigDirectorMethodOnRtnPosition);
    
      swigDelegate19 = new SwigDelegateIStockEvent_19(SwigDirectorMethodOnRspQryTick);
    
      swigDelegate20 = new SwigDelegateIStockEvent_20(SwigDirectorMethodOnRspQryOrder);
    
      swigDelegate21 = new SwigDelegateIStockEvent_21(SwigDirectorMethodOnRspQryTrade);
    
      swigDelegate22 = new SwigDelegateIStockEvent_22(SwigDirectorMethodOnRspQryCapital);
    
      swigDelegate23 = new SwigDelegateIStockEvent_23(SwigDirectorMethodOnRspQryVersion);
    
      swigDelegate24 = new SwigDelegateIStockEvent_24(SwigDirectorMethodOnRspQryPosition);
    
      swigDelegate25 = new SwigDelegateIStockEvent_25(SwigDirectorMethodOnRspQryCurrency);
    
      swigDelegate26 = new SwigDelegateIStockEvent_26(SwigDirectorMethodOnRspQryExchange);
    
      swigDelegate27 = new SwigDelegateIStockEvent_27(SwigDirectorMethodOnRspQryInstrument);
    DaApiWrapperPINVOKE.IStockEvent_director_connect(swigCPtr, swigDelegate0, swigDelegate1, swigDelegate2, swigDelegate3, swigDelegate4, swigDelegate5, swigDelegate6, swigDelegate7, swigDelegate8, swigDelegate9, swigDelegate10, swigDelegate11, swigDelegate12, swigDelegate13, swigDelegate14, swigDelegate15, swigDelegate16, swigDelegate17, swigDelegate18, swigDelegate19, swigDelegate20, swigDelegate21, swigDelegate22, swigDelegate23, swigDelegate24, swigDelegate25, swigDelegate26, swigDelegate27);
  }

  private void SwigDirectorMethodOnFrontConnected() {
    OnFrontConnected();
  }

  private void SwigDirectorMethodOnFrontDisconnected(int iReason) {
    OnFrontDisconnected(iReason);
  }

  private void SwigDirectorMethodOnHeartBeatWarning(int iTimeLapse) {
    OnHeartBeatWarning(iTimeLapse);
  }

  private void SwigDirectorMethodOnRspNeedVerify(bool bFirstLogin, bool bHasSetQA) {
    OnRspNeedVerify(bFirstLogin, bHasSetQA);
  }

  private void SwigDirectorMethodOnRspUserLogin(global::System.IntPtr pRspInfo, int iRequestID, bool bIsLast) {
    OnRspUserLogin((pRspInfo == global::System.IntPtr.Zero) ? null : new CStockRspInfoField(pRspInfo, false), iRequestID, bIsLast);
  }

  private void SwigDirectorMethodOnRspUserLogout(global::System.IntPtr pRspInfo, int iRequestID, bool bIsLast) {
    OnRspUserLogout((pRspInfo == global::System.IntPtr.Zero) ? null : new CStockRspInfoField(pRspInfo, false), iRequestID, bIsLast);
  }

  private void SwigDirectorMethodOnRspVerifyCode(global::System.IntPtr pRspInfo, int iRequestID, bool bIsLast) {
    OnRspVerifyCode((pRspInfo == global::System.IntPtr.Zero) ? null : new CStockRspInfoField(pRspInfo, false), iRequestID, bIsLast);
  }

  private void SwigDirectorMethodOnRspSafeVerify(global::System.IntPtr pRspInfo, int iRequestID, bool bIsLast) {
    OnRspSafeVerify((pRspInfo == global::System.IntPtr.Zero) ? null : new CStockRspInfoField(pRspInfo, false), iRequestID, bIsLast);
  }

  private void SwigDirectorMethodOnRspSetVerifyQA(global::System.IntPtr pRspInfo, int iRequestID, bool bIsLast) {
    OnRspSetVerifyQA((pRspInfo == global::System.IntPtr.Zero) ? null : new CStockRspInfoField(pRspInfo, false), iRequestID, bIsLast);
  }

  private void SwigDirectorMethodOnRspAccount(global::System.IntPtr pRspAccount, global::System.IntPtr pRspInfo, int iRequestID, bool bIsLast) {
    OnRspAccount((pRspAccount == global::System.IntPtr.Zero) ? null : new CStockRspAccountField(pRspAccount, false), (pRspInfo == global::System.IntPtr.Zero) ? null : new CStockRspInfoField(pRspInfo, false), iRequestID, bIsLast);
  }

  private void SwigDirectorMethodOnRspQuestion(global::System.IntPtr pRspQuestion, global::System.IntPtr pRspInfo, int iRequestID, bool bIsLast) {
    OnRspQuestion((pRspQuestion == global::System.IntPtr.Zero) ? null : new CStockRspQuestionField(pRspQuestion, false), (pRspInfo == global::System.IntPtr.Zero) ? null : new CStockRspInfoField(pRspInfo, false), iRequestID, bIsLast);
  }

  private void SwigDirectorMethodOnRspOrderInsert(global::System.IntPtr pRspOrderInsert, global::System.IntPtr pRspInfo, int iRequestID, bool bIsLast) {
    OnRspOrderInsert((pRspOrderInsert == global::System.IntPtr.Zero) ? null : new CStockRspOrderInsertField(pRspOrderInsert, false), (pRspInfo == global::System.IntPtr.Zero) ? null : new CStockRspInfoField(pRspInfo, false), iRequestID, bIsLast);
  }

  private void SwigDirectorMethodOnRspOrderModify(global::System.IntPtr pRspOrderModify, global::System.IntPtr pRspInfo, int iRequestID, bool bIsLast) {
    OnRspOrderModify((pRspOrderModify == global::System.IntPtr.Zero) ? null : new CStockRspOrderInsertField(pRspOrderModify, false), (pRspInfo == global::System.IntPtr.Zero) ? null : new CStockRspInfoField(pRspInfo, false), iRequestID, bIsLast);
  }

  private void SwigDirectorMethodOnRspOrderCancel(global::System.IntPtr pRspOrderCancel, global::System.IntPtr pRspInfo, int iRequestID, bool bIsLast) {
    OnRspOrderCancel((pRspOrderCancel == global::System.IntPtr.Zero) ? null : new CStockRspOrderCancelField(pRspOrderCancel, false), (pRspInfo == global::System.IntPtr.Zero) ? null : new CStockRspInfoField(pRspInfo, false), iRequestID, bIsLast);
  }

  private void SwigDirectorMethodOnRspPasswordUpdate(global::System.IntPtr pRspPasswordUpdate, global::System.IntPtr pRspInfo, int iRequestID, bool bIsLast) {
    OnRspPasswordUpdate((pRspPasswordUpdate == global::System.IntPtr.Zero) ? null : new CStockRspPasswordUpdateField(pRspPasswordUpdate, false), (pRspInfo == global::System.IntPtr.Zero) ? null : new CStockRspInfoField(pRspInfo, false), iRequestID, bIsLast);
  }

  private void SwigDirectorMethodOnRtnTrade(global::System.IntPtr pRtnTrade, global::System.IntPtr pRspInfo, int iRequestID, bool bIsLast) {
    OnRtnTrade((pRtnTrade == global::System.IntPtr.Zero) ? null : new CStockRspTradeField(pRtnTrade, false), (pRspInfo == global::System.IntPtr.Zero) ? null : new CStockRspInfoField(pRspInfo, false), iRequestID, bIsLast);
  }

  private void SwigDirectorMethodOnRtnOrder(global::System.IntPtr pRtnOrder, global::System.IntPtr pRspInfo, int iRequestID, bool bIsLast) {
    OnRtnOrder((pRtnOrder == global::System.IntPtr.Zero) ? null : new CStockRtnOrderField(pRtnOrder, false), (pRspInfo == global::System.IntPtr.Zero) ? null : new CStockRspInfoField(pRspInfo, false), iRequestID, bIsLast);
  }

  private void SwigDirectorMethodOnRtnCapital(global::System.IntPtr pRtnCapital, global::System.IntPtr pRspInfo, int iRequestID, bool bIsLast) {
    OnRtnCapital((pRtnCapital == global::System.IntPtr.Zero) ? null : new CStockRtnCapitalField(pRtnCapital, false), (pRspInfo == global::System.IntPtr.Zero) ? null : new CStockRspInfoField(pRspInfo, false), iRequestID, bIsLast);
  }

  private void SwigDirectorMethodOnRtnPosition(global::System.IntPtr pRtnPosition, global::System.IntPtr pRspInfo, int iRequestID, bool bIsLast) {
    OnRtnPosition((pRtnPosition == global::System.IntPtr.Zero) ? null : new CStockRspPositionField(pRtnPosition, false), (pRspInfo == global::System.IntPtr.Zero) ? null : new CStockRspInfoField(pRspInfo, false), iRequestID, bIsLast);
  }

  private void SwigDirectorMethodOnRspQryTick(global::System.IntPtr pRspTick, global::System.IntPtr pRspInfo, int iRequestID, bool bIsLast) {
    OnRspQryTick((pRspTick == global::System.IntPtr.Zero) ? null : new CStockRspTickField(pRspTick, false), (pRspInfo == global::System.IntPtr.Zero) ? null : new CStockRspInfoField(pRspInfo, false), iRequestID, bIsLast);
  }

  private void SwigDirectorMethodOnRspQryOrder(global::System.IntPtr pRspOrder, global::System.IntPtr pRspInfo, int iRequestID, bool bIsLast) {
    OnRspQryOrder((pRspOrder == global::System.IntPtr.Zero) ? null : new CStockRspOrderField(pRspOrder, false), (pRspInfo == global::System.IntPtr.Zero) ? null : new CStockRspInfoField(pRspInfo, false), iRequestID, bIsLast);
  }

  private void SwigDirectorMethodOnRspQryTrade(global::System.IntPtr pRspTrade, global::System.IntPtr pRspInfo, int iRequestID, bool bIsLast) {
    OnRspQryTrade((pRspTrade == global::System.IntPtr.Zero) ? null : new CStockRspTradeField(pRspTrade, false), (pRspInfo == global::System.IntPtr.Zero) ? null : new CStockRspInfoField(pRspInfo, false), iRequestID, bIsLast);
  }

  private void SwigDirectorMethodOnRspQryCapital(global::System.IntPtr pRspCapital, global::System.IntPtr pRspInfo, int iRequestID, bool bIsLast) {
    OnRspQryCapital((pRspCapital == global::System.IntPtr.Zero) ? null : new CStockRspCapitalField(pRspCapital, false), (pRspInfo == global::System.IntPtr.Zero) ? null : new CStockRspInfoField(pRspInfo, false), iRequestID, bIsLast);
  }

  private void SwigDirectorMethodOnRspQryVersion(global::System.IntPtr pRspVersion, global::System.IntPtr pRspInfo, int iRequestID, bool bIsLast) {
    OnRspQryVersion((pRspVersion == global::System.IntPtr.Zero) ? null : new CStockRspVersionField(pRspVersion, false), (pRspInfo == global::System.IntPtr.Zero) ? null : new CStockRspInfoField(pRspInfo, false), iRequestID, bIsLast);
  }

  private void SwigDirectorMethodOnRspQryPosition(global::System.IntPtr pRspPosition, global::System.IntPtr pRspInfo, int iRequestID, bool bIsLast) {
    OnRspQryPosition((pRspPosition == global::System.IntPtr.Zero) ? null : new CStockRspPositionField(pRspPosition, false), (pRspInfo == global::System.IntPtr.Zero) ? null : new CStockRspInfoField(pRspInfo, false), iRequestID, bIsLast);
  }

  private void SwigDirectorMethodOnRspQryCurrency(global::System.IntPtr pRspCurrency, global::System.IntPtr pRspInfo, int iRequestID, bool bIsLast) {
    OnRspQryCurrency((pRspCurrency == global::System.IntPtr.Zero) ? null : new CStockRspCurrencyField(pRspCurrency, false), (pRspInfo == global::System.IntPtr.Zero) ? null : new CStockRspInfoField(pRspInfo, false), iRequestID, bIsLast);
  }

  private void SwigDirectorMethodOnRspQryExchange(global::System.IntPtr pRspExchange, global::System.IntPtr pRspInfo, int iRequestID, bool bIsLast) {
    OnRspQryExchange((pRspExchange == global::System.IntPtr.Zero) ? null : new CStockRspExchangeField(pRspExchange, false), (pRspInfo == global::System.IntPtr.Zero) ? null : new CStockRspInfoField(pRspInfo, false), iRequestID, bIsLast);
  }

  private void SwigDirectorMethodOnRspQryInstrument(global::System.IntPtr pRspInstrument, global::System.IntPtr pRspInfo, int iRequestID, bool bIsLast) {
    OnRspQryInstrument((pRspInstrument == global::System.IntPtr.Zero) ? null : new CStockRspInstrumentField(pRspInstrument, false), (pRspInfo == global::System.IntPtr.Zero) ? null : new CStockRspInfoField(pRspInfo, false), iRequestID, bIsLast);
  }

  public delegate void SwigDelegateIStockEvent_0();
  public delegate void SwigDelegateIStockEvent_1(int iReason);
  public delegate void SwigDelegateIStockEvent_2(int iTimeLapse);
  public delegate void SwigDelegateIStockEvent_3(bool bFirstLogin, bool bHasSetQA);
  public delegate void SwigDelegateIStockEvent_4(global::System.IntPtr pRspInfo, int iRequestID, bool bIsLast);
  public delegate void SwigDelegateIStockEvent_5(global::System.IntPtr pRspInfo, int iRequestID, bool bIsLast);
  public delegate void SwigDelegateIStockEvent_6(global::System.IntPtr pRspInfo, int iRequestID, bool bIsLast);
  public delegate void SwigDelegateIStockEvent_7(global::System.IntPtr pRspInfo, int iRequestID, bool bIsLast);
  public delegate void SwigDelegateIStockEvent_8(global::System.IntPtr pRspInfo, int iRequestID, bool bIsLast);
  public delegate void SwigDelegateIStockEvent_9(global::System.IntPtr pRspAccount, global::System.IntPtr pRspInfo, int iRequestID, bool bIsLast);
  public delegate void SwigDelegateIStockEvent_10(global::System.IntPtr pRspQuestion, global::System.IntPtr pRspInfo, int iRequestID, bool bIsLast);
  public delegate void SwigDelegateIStockEvent_11(global::System.IntPtr pRspOrderInsert, global::System.IntPtr pRspInfo, int iRequestID, bool bIsLast);
  public delegate void SwigDelegateIStockEvent_12(global::System.IntPtr pRspOrderModify, global::System.IntPtr pRspInfo, int iRequestID, bool bIsLast);
  public delegate void SwigDelegateIStockEvent_13(global::System.IntPtr pRspOrderCancel, global::System.IntPtr pRspInfo, int iRequestID, bool bIsLast);
  public delegate void SwigDelegateIStockEvent_14(global::System.IntPtr pRspPasswordUpdate, global::System.IntPtr pRspInfo, int iRequestID, bool bIsLast);
  public delegate void SwigDelegateIStockEvent_15(global::System.IntPtr pRtnTrade, global::System.IntPtr pRspInfo, int iRequestID, bool bIsLast);
  public delegate void SwigDelegateIStockEvent_16(global::System.IntPtr pRtnOrder, global::System.IntPtr pRspInfo, int iRequestID, bool bIsLast);
  public delegate void SwigDelegateIStockEvent_17(global::System.IntPtr pRtnCapital, global::System.IntPtr pRspInfo, int iRequestID, bool bIsLast);
  public delegate void SwigDelegateIStockEvent_18(global::System.IntPtr pRtnPosition, global::System.IntPtr pRspInfo, int iRequestID, bool bIsLast);
  public delegate void SwigDelegateIStockEvent_19(global::System.IntPtr pRspTick, global::System.IntPtr pRspInfo, int iRequestID, bool bIsLast);
  public delegate void SwigDelegateIStockEvent_20(global::System.IntPtr pRspOrder, global::System.IntPtr pRspInfo, int iRequestID, bool bIsLast);
  public delegate void SwigDelegateIStockEvent_21(global::System.IntPtr pRspTrade, global::System.IntPtr pRspInfo, int iRequestID, bool bIsLast);
  public delegate void SwigDelegateIStockEvent_22(global::System.IntPtr pRspCapital, global::System.IntPtr pRspInfo, int iRequestID, bool bIsLast);
  public delegate void SwigDelegateIStockEvent_23(global::System.IntPtr pRspVersion, global::System.IntPtr pRspInfo, int iRequestID, bool bIsLast);
  public delegate void SwigDelegateIStockEvent_24(global::System.IntPtr pRspPosition, global::System.IntPtr pRspInfo, int iRequestID, bool bIsLast);
  public delegate void SwigDelegateIStockEvent_25(global::System.IntPtr pRspCurrency, global::System.IntPtr pRspInfo, int iRequestID, bool bIsLast);
  public delegate void SwigDelegateIStockEvent_26(global::System.IntPtr pRspExchange, global::System.IntPtr pRspInfo, int iRequestID, bool bIsLast);
  public delegate void SwigDelegateIStockEvent_27(global::System.IntPtr pRspInstrument, global::System.IntPtr pRspInfo, int iRequestID, bool bIsLast);

  private SwigDelegateIStockEvent_0 swigDelegate0;
  private SwigDelegateIStockEvent_1 swigDelegate1;
  private SwigDelegateIStockEvent_2 swigDelegate2;
  private SwigDelegateIStockEvent_3 swigDelegate3;
  private SwigDelegateIStockEvent_4 swigDelegate4;
  private SwigDelegateIStockEvent_5 swigDelegate5;
  private SwigDelegateIStockEvent_6 swigDelegate6;
  private SwigDelegateIStockEvent_7 swigDelegate7;
  private SwigDelegateIStockEvent_8 swigDelegate8;
  private SwigDelegateIStockEvent_9 swigDelegate9;
  private SwigDelegateIStockEvent_10 swigDelegate10;
  private SwigDelegateIStockEvent_11 swigDelegate11;
  private SwigDelegateIStockEvent_12 swigDelegate12;
  private SwigDelegateIStockEvent_13 swigDelegate13;
  private SwigDelegateIStockEvent_14 swigDelegate14;
  private SwigDelegateIStockEvent_15 swigDelegate15;
  private SwigDelegateIStockEvent_16 swigDelegate16;
  private SwigDelegateIStockEvent_17 swigDelegate17;
  private SwigDelegateIStockEvent_18 swigDelegate18;
  private SwigDelegateIStockEvent_19 swigDelegate19;
  private SwigDelegateIStockEvent_20 swigDelegate20;
  private SwigDelegateIStockEvent_21 swigDelegate21;
  private SwigDelegateIStockEvent_22 swigDelegate22;
  private SwigDelegateIStockEvent_23 swigDelegate23;
  private SwigDelegateIStockEvent_24 swigDelegate24;
  private SwigDelegateIStockEvent_25 swigDelegate25;
  private SwigDelegateIStockEvent_26 swigDelegate26;
  private SwigDelegateIStockEvent_27 swigDelegate27;
}

}
